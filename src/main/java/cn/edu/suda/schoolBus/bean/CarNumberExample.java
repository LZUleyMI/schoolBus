package cn.edu.suda.schoolBus.bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class CarNumberExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table car_number
     *
     * @mbggenerated Sun Apr 10 16:10:16 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table car_number
     *
     * @mbggenerated Sun Apr 10 16:10:16 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table car_number
     *
     * @mbggenerated Sun Apr 10 16:10:16 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car_number
     *
     * @mbggenerated Sun Apr 10 16:10:16 CST 2016
     */
    public CarNumberExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car_number
     *
     * @mbggenerated Sun Apr 10 16:10:16 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car_number
     *
     * @mbggenerated Sun Apr 10 16:10:16 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car_number
     *
     * @mbggenerated Sun Apr 10 16:10:16 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car_number
     *
     * @mbggenerated Sun Apr 10 16:10:16 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car_number
     *
     * @mbggenerated Sun Apr 10 16:10:16 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car_number
     *
     * @mbggenerated Sun Apr 10 16:10:16 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car_number
     *
     * @mbggenerated Sun Apr 10 16:10:16 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car_number
     *
     * @mbggenerated Sun Apr 10 16:10:16 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car_number
     *
     * @mbggenerated Sun Apr 10 16:10:16 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car_number
     *
     * @mbggenerated Sun Apr 10 16:10:16 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table car_number
     *
     * @mbggenerated Sun Apr 10 16:10:16 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCTime(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Time(value.getTime()), property);
        }

        protected void addCriterionForJDBCTime(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Time> timeList = new ArrayList<java.sql.Time>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                timeList.add(new java.sql.Time(iter.next().getTime()));
            }
            addCriterion(condition, timeList, property);
        }

        protected void addCriterionForJDBCTime(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Time(value1.getTime()), new java.sql.Time(value2.getTime()), property);
        }

        public Criteria andCnIdIsNull() {
            addCriterion("cn_id is null");
            return (Criteria) this;
        }

        public Criteria andCnIdIsNotNull() {
            addCriterion("cn_id is not null");
            return (Criteria) this;
        }

        public Criteria andCnIdEqualTo(Integer value) {
            addCriterion("cn_id =", value, "cnId");
            return (Criteria) this;
        }

        public Criteria andCnIdNotEqualTo(Integer value) {
            addCriterion("cn_id <>", value, "cnId");
            return (Criteria) this;
        }

        public Criteria andCnIdGreaterThan(Integer value) {
            addCriterion("cn_id >", value, "cnId");
            return (Criteria) this;
        }

        public Criteria andCnIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("cn_id >=", value, "cnId");
            return (Criteria) this;
        }

        public Criteria andCnIdLessThan(Integer value) {
            addCriterion("cn_id <", value, "cnId");
            return (Criteria) this;
        }

        public Criteria andCnIdLessThanOrEqualTo(Integer value) {
            addCriterion("cn_id <=", value, "cnId");
            return (Criteria) this;
        }

        public Criteria andCnIdIn(List<Integer> values) {
            addCriterion("cn_id in", values, "cnId");
            return (Criteria) this;
        }

        public Criteria andCnIdNotIn(List<Integer> values) {
            addCriterion("cn_id not in", values, "cnId");
            return (Criteria) this;
        }

        public Criteria andCnIdBetween(Integer value1, Integer value2) {
            addCriterion("cn_id between", value1, value2, "cnId");
            return (Criteria) this;
        }

        public Criteria andCnIdNotBetween(Integer value1, Integer value2) {
            addCriterion("cn_id not between", value1, value2, "cnId");
            return (Criteria) this;
        }

        public Criteria andDeparturePlaceIsNull() {
            addCriterion("departure_place is null");
            return (Criteria) this;
        }

        public Criteria andDeparturePlaceIsNotNull() {
            addCriterion("departure_place is not null");
            return (Criteria) this;
        }

        public Criteria andDeparturePlaceEqualTo(String value) {
            addCriterion("departure_place =", value, "departurePlace");
            return (Criteria) this;
        }

        public Criteria andDeparturePlaceNotEqualTo(String value) {
            addCriterion("departure_place <>", value, "departurePlace");
            return (Criteria) this;
        }

        public Criteria andDeparturePlaceGreaterThan(String value) {
            addCriterion("departure_place >", value, "departurePlace");
            return (Criteria) this;
        }

        public Criteria andDeparturePlaceGreaterThanOrEqualTo(String value) {
            addCriterion("departure_place >=", value, "departurePlace");
            return (Criteria) this;
        }

        public Criteria andDeparturePlaceLessThan(String value) {
            addCriterion("departure_place <", value, "departurePlace");
            return (Criteria) this;
        }

        public Criteria andDeparturePlaceLessThanOrEqualTo(String value) {
            addCriterion("departure_place <=", value, "departurePlace");
            return (Criteria) this;
        }

        public Criteria andDeparturePlaceLike(String value) {
            addCriterion("departure_place like", value, "departurePlace");
            return (Criteria) this;
        }

        public Criteria andDeparturePlaceNotLike(String value) {
            addCriterion("departure_place not like", value, "departurePlace");
            return (Criteria) this;
        }

        public Criteria andDeparturePlaceIn(List<String> values) {
            addCriterion("departure_place in", values, "departurePlace");
            return (Criteria) this;
        }

        public Criteria andDeparturePlaceNotIn(List<String> values) {
            addCriterion("departure_place not in", values, "departurePlace");
            return (Criteria) this;
        }

        public Criteria andDeparturePlaceBetween(String value1, String value2) {
            addCriterion("departure_place between", value1, value2, "departurePlace");
            return (Criteria) this;
        }

        public Criteria andDeparturePlaceNotBetween(String value1, String value2) {
            addCriterion("departure_place not between", value1, value2, "departurePlace");
            return (Criteria) this;
        }

        public Criteria andDepartureTimeIsNull() {
            addCriterion("departure_time is null");
            return (Criteria) this;
        }

        public Criteria andDepartureTimeIsNotNull() {
            addCriterion("departure_time is not null");
            return (Criteria) this;
        }

        public Criteria andDepartureTimeEqualTo(Date value) {
            addCriterionForJDBCTime("departure_time =", value, "departureTime");
            return (Criteria) this;
        }

        public Criteria andDepartureTimeNotEqualTo(Date value) {
            addCriterionForJDBCTime("departure_time <>", value, "departureTime");
            return (Criteria) this;
        }

        public Criteria andDepartureTimeGreaterThan(Date value) {
            addCriterionForJDBCTime("departure_time >", value, "departureTime");
            return (Criteria) this;
        }

        public Criteria andDepartureTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("departure_time >=", value, "departureTime");
            return (Criteria) this;
        }

        public Criteria andDepartureTimeLessThan(Date value) {
            addCriterionForJDBCTime("departure_time <", value, "departureTime");
            return (Criteria) this;
        }

        public Criteria andDepartureTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("departure_time <=", value, "departureTime");
            return (Criteria) this;
        }

        public Criteria andDepartureTimeIn(List<Date> values) {
            addCriterionForJDBCTime("departure_time in", values, "departureTime");
            return (Criteria) this;
        }

        public Criteria andDepartureTimeNotIn(List<Date> values) {
            addCriterionForJDBCTime("departure_time not in", values, "departureTime");
            return (Criteria) this;
        }

        public Criteria andDepartureTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("departure_time between", value1, value2, "departureTime");
            return (Criteria) this;
        }

        public Criteria andDepartureTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("departure_time not between", value1, value2, "departureTime");
            return (Criteria) this;
        }

        public Criteria andCnStatusIsNull() {
            addCriterion("cn_status is null");
            return (Criteria) this;
        }

        public Criteria andCnStatusIsNotNull() {
            addCriterion("cn_status is not null");
            return (Criteria) this;
        }

        public Criteria andCnStatusEqualTo(Integer value) {
            addCriterion("cn_status =", value, "cnStatus");
            return (Criteria) this;
        }

        public Criteria andCnStatusNotEqualTo(Integer value) {
            addCriterion("cn_status <>", value, "cnStatus");
            return (Criteria) this;
        }

        public Criteria andCnStatusGreaterThan(Integer value) {
            addCriterion("cn_status >", value, "cnStatus");
            return (Criteria) this;
        }

        public Criteria andCnStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("cn_status >=", value, "cnStatus");
            return (Criteria) this;
        }

        public Criteria andCnStatusLessThan(Integer value) {
            addCriterion("cn_status <", value, "cnStatus");
            return (Criteria) this;
        }

        public Criteria andCnStatusLessThanOrEqualTo(Integer value) {
            addCriterion("cn_status <=", value, "cnStatus");
            return (Criteria) this;
        }

        public Criteria andCnStatusIn(List<Integer> values) {
            addCriterion("cn_status in", values, "cnStatus");
            return (Criteria) this;
        }

        public Criteria andCnStatusNotIn(List<Integer> values) {
            addCriterion("cn_status not in", values, "cnStatus");
            return (Criteria) this;
        }

        public Criteria andCnStatusBetween(Integer value1, Integer value2) {
            addCriterion("cn_status between", value1, value2, "cnStatus");
            return (Criteria) this;
        }

        public Criteria andCnStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("cn_status not between", value1, value2, "cnStatus");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table car_number
     *
     * @mbggenerated do_not_delete_during_merge Sun Apr 10 16:10:16 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table car_number
     *
     * @mbggenerated Sun Apr 10 16:10:16 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}