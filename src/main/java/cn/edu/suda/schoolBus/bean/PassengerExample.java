package cn.edu.suda.schoolBus.bean;

import java.util.ArrayList;
import java.util.List;

public class PassengerExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table passenger
     *
     * @mbggenerated Sun Apr 10 16:10:16 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table passenger
     *
     * @mbggenerated Sun Apr 10 16:10:16 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table passenger
     *
     * @mbggenerated Sun Apr 10 16:10:16 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table passenger
     *
     * @mbggenerated Sun Apr 10 16:10:16 CST 2016
     */
    public PassengerExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table passenger
     *
     * @mbggenerated Sun Apr 10 16:10:16 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table passenger
     *
     * @mbggenerated Sun Apr 10 16:10:16 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table passenger
     *
     * @mbggenerated Sun Apr 10 16:10:16 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table passenger
     *
     * @mbggenerated Sun Apr 10 16:10:16 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table passenger
     *
     * @mbggenerated Sun Apr 10 16:10:16 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table passenger
     *
     * @mbggenerated Sun Apr 10 16:10:16 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table passenger
     *
     * @mbggenerated Sun Apr 10 16:10:16 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table passenger
     *
     * @mbggenerated Sun Apr 10 16:10:16 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table passenger
     *
     * @mbggenerated Sun Apr 10 16:10:16 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table passenger
     *
     * @mbggenerated Sun Apr 10 16:10:16 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table passenger
     *
     * @mbggenerated Sun Apr 10 16:10:16 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andPIdIsNull() {
            addCriterion("p_id is null");
            return (Criteria) this;
        }

        public Criteria andPIdIsNotNull() {
            addCriterion("p_id is not null");
            return (Criteria) this;
        }

        public Criteria andPIdEqualTo(Integer value) {
            addCriterion("p_id =", value, "pId");
            return (Criteria) this;
        }

        public Criteria andPIdNotEqualTo(Integer value) {
            addCriterion("p_id <>", value, "pId");
            return (Criteria) this;
        }

        public Criteria andPIdGreaterThan(Integer value) {
            addCriterion("p_id >", value, "pId");
            return (Criteria) this;
        }

        public Criteria andPIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("p_id >=", value, "pId");
            return (Criteria) this;
        }

        public Criteria andPIdLessThan(Integer value) {
            addCriterion("p_id <", value, "pId");
            return (Criteria) this;
        }

        public Criteria andPIdLessThanOrEqualTo(Integer value) {
            addCriterion("p_id <=", value, "pId");
            return (Criteria) this;
        }

        public Criteria andPIdIn(List<Integer> values) {
            addCriterion("p_id in", values, "pId");
            return (Criteria) this;
        }

        public Criteria andPIdNotIn(List<Integer> values) {
            addCriterion("p_id not in", values, "pId");
            return (Criteria) this;
        }

        public Criteria andPIdBetween(Integer value1, Integer value2) {
            addCriterion("p_id between", value1, value2, "pId");
            return (Criteria) this;
        }

        public Criteria andPIdNotBetween(Integer value1, Integer value2) {
            addCriterion("p_id not between", value1, value2, "pId");
            return (Criteria) this;
        }

        public Criteria andPAccountIsNull() {
            addCriterion("p_account is null");
            return (Criteria) this;
        }

        public Criteria andPAccountIsNotNull() {
            addCriterion("p_account is not null");
            return (Criteria) this;
        }

        public Criteria andPAccountEqualTo(String value) {
            addCriterion("p_account =", value, "pAccount");
            return (Criteria) this;
        }

        public Criteria andPAccountNotEqualTo(String value) {
            addCriterion("p_account <>", value, "pAccount");
            return (Criteria) this;
        }

        public Criteria andPAccountGreaterThan(String value) {
            addCriterion("p_account >", value, "pAccount");
            return (Criteria) this;
        }

        public Criteria andPAccountGreaterThanOrEqualTo(String value) {
            addCriterion("p_account >=", value, "pAccount");
            return (Criteria) this;
        }

        public Criteria andPAccountLessThan(String value) {
            addCriterion("p_account <", value, "pAccount");
            return (Criteria) this;
        }

        public Criteria andPAccountLessThanOrEqualTo(String value) {
            addCriterion("p_account <=", value, "pAccount");
            return (Criteria) this;
        }

        public Criteria andPAccountLike(String value) {
            addCriterion("p_account like", value, "pAccount");
            return (Criteria) this;
        }

        public Criteria andPAccountNotLike(String value) {
            addCriterion("p_account not like", value, "pAccount");
            return (Criteria) this;
        }

        public Criteria andPAccountIn(List<String> values) {
            addCriterion("p_account in", values, "pAccount");
            return (Criteria) this;
        }

        public Criteria andPAccountNotIn(List<String> values) {
            addCriterion("p_account not in", values, "pAccount");
            return (Criteria) this;
        }

        public Criteria andPAccountBetween(String value1, String value2) {
            addCriterion("p_account between", value1, value2, "pAccount");
            return (Criteria) this;
        }

        public Criteria andPAccountNotBetween(String value1, String value2) {
            addCriterion("p_account not between", value1, value2, "pAccount");
            return (Criteria) this;
        }

        public Criteria andPPasswdIsNull() {
            addCriterion("p_passwd is null");
            return (Criteria) this;
        }

        public Criteria andPPasswdIsNotNull() {
            addCriterion("p_passwd is not null");
            return (Criteria) this;
        }

        public Criteria andPPasswdEqualTo(String value) {
            addCriterion("p_passwd =", value, "pPasswd");
            return (Criteria) this;
        }

        public Criteria andPPasswdNotEqualTo(String value) {
            addCriterion("p_passwd <>", value, "pPasswd");
            return (Criteria) this;
        }

        public Criteria andPPasswdGreaterThan(String value) {
            addCriterion("p_passwd >", value, "pPasswd");
            return (Criteria) this;
        }

        public Criteria andPPasswdGreaterThanOrEqualTo(String value) {
            addCriterion("p_passwd >=", value, "pPasswd");
            return (Criteria) this;
        }

        public Criteria andPPasswdLessThan(String value) {
            addCriterion("p_passwd <", value, "pPasswd");
            return (Criteria) this;
        }

        public Criteria andPPasswdLessThanOrEqualTo(String value) {
            addCriterion("p_passwd <=", value, "pPasswd");
            return (Criteria) this;
        }

        public Criteria andPPasswdLike(String value) {
            addCriterion("p_passwd like", value, "pPasswd");
            return (Criteria) this;
        }

        public Criteria andPPasswdNotLike(String value) {
            addCriterion("p_passwd not like", value, "pPasswd");
            return (Criteria) this;
        }

        public Criteria andPPasswdIn(List<String> values) {
            addCriterion("p_passwd in", values, "pPasswd");
            return (Criteria) this;
        }

        public Criteria andPPasswdNotIn(List<String> values) {
            addCriterion("p_passwd not in", values, "pPasswd");
            return (Criteria) this;
        }

        public Criteria andPPasswdBetween(String value1, String value2) {
            addCriterion("p_passwd between", value1, value2, "pPasswd");
            return (Criteria) this;
        }

        public Criteria andPPasswdNotBetween(String value1, String value2) {
            addCriterion("p_passwd not between", value1, value2, "pPasswd");
            return (Criteria) this;
        }

        public Criteria andPSortIsNull() {
            addCriterion("p_sort is null");
            return (Criteria) this;
        }

        public Criteria andPSortIsNotNull() {
            addCriterion("p_sort is not null");
            return (Criteria) this;
        }

        public Criteria andPSortEqualTo(Integer value) {
            addCriterion("p_sort =", value, "pSort");
            return (Criteria) this;
        }

        public Criteria andPSortNotEqualTo(Integer value) {
            addCriterion("p_sort <>", value, "pSort");
            return (Criteria) this;
        }

        public Criteria andPSortGreaterThan(Integer value) {
            addCriterion("p_sort >", value, "pSort");
            return (Criteria) this;
        }

        public Criteria andPSortGreaterThanOrEqualTo(Integer value) {
            addCriterion("p_sort >=", value, "pSort");
            return (Criteria) this;
        }

        public Criteria andPSortLessThan(Integer value) {
            addCriterion("p_sort <", value, "pSort");
            return (Criteria) this;
        }

        public Criteria andPSortLessThanOrEqualTo(Integer value) {
            addCriterion("p_sort <=", value, "pSort");
            return (Criteria) this;
        }

        public Criteria andPSortIn(List<Integer> values) {
            addCriterion("p_sort in", values, "pSort");
            return (Criteria) this;
        }

        public Criteria andPSortNotIn(List<Integer> values) {
            addCriterion("p_sort not in", values, "pSort");
            return (Criteria) this;
        }

        public Criteria andPSortBetween(Integer value1, Integer value2) {
            addCriterion("p_sort between", value1, value2, "pSort");
            return (Criteria) this;
        }

        public Criteria andPSortNotBetween(Integer value1, Integer value2) {
            addCriterion("p_sort not between", value1, value2, "pSort");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table passenger
     *
     * @mbggenerated do_not_delete_during_merge Sun Apr 10 16:10:16 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table passenger
     *
     * @mbggenerated Sun Apr 10 16:10:16 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}